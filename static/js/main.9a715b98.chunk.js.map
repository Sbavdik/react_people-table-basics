{"version":3,"sources":["components/PageLink/PageLink.tsx","components/Navbar/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonPage/PersonPage.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["PageLink","to","text","className","isActive","cn","Navbar","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","slug","PersonPage","selectedSlug","people","born","died","motherName","fatherName","hasSelected","selectedMother","find","p","selectedFather","motherNameCell","fatherNameCell","PeopleTable","hasError","length","map","PeoplePage","useParams","useState","setPeople","isLoading","setIsLoading","setHasError","useEffect","getPeopleOnLoad","allPeople","HomePage","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9a715b98.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageLink } from '../PageLink';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageLink to=\"/\" text=\"Home\" />\n          <PageLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n  people: Person[];\n\n};\n\nexport const PersonPage: React.FC<Props> = ({\n  person,\n  selectedSlug,\n  people,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const hasSelected = slug === selectedSlug;\n  const selectedMother = people.find(p => p.name === motherName);\n  const selectedFather = people.find(p => p.name === fatherName);\n  const motherNameCell = motherName || '-';\n  const fatherNameCell = fatherName || '-';\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': hasSelected,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {selectedMother\n          ? <PersonLink person={selectedMother} />\n          : motherNameCell}\n      </td>\n\n      <td>\n        {selectedFather\n          ? <PersonLink person={selectedFather} />\n          : fatherNameCell}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonPage } from '../PersonPage';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string,\n  hasError: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedSlug,\n  hasError,\n}) => {\n  if (hasError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonPage\n            key={person.name}\n            person={person}\n            selectedSlug={selectedSlug}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const getPeopleOnLoad = async () => {\n      try {\n        const allPeople = await getPeople();\n\n        setPeople(allPeople);\n      } catch (error) {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleOnLoad();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? (\n              <Loader />\n            )\n            : (\n              <PeopleTable\n                people={people}\n                selectedSlug={slug}\n                hasError={hasError}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}